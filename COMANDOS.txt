
git whatchanged    - mostrar os arquivo alterados
git whatchanged -p - mostrar o que foi alterado nesses arquivos nos commits

O processo de copiar o repositório remoto para um computador, a fim de realizar alterações nos arquivos ou até mesmo para ter os arquivos no computador, é chamado de "clone" e pode ser realizado através do comando git clone [uri_do_repositorio].
	É importante ter em mente que o processo de clonagem de um projeto pode demorar. O tempo pode variar de acordo com o tamanho do projeto que está sendo clonado e também com a velocidade de conexão
 
 Ao final das alterações, ele realizará o envio dos commits para o repositório remoto através da execução do comando git push origin master.

 Sincronização com as novas alterações do repositório
 	Para que a sincronização seja realizada e o desenvolvedor tenha em seu computador as novas versões dos arquivos, basta que ele execute o comando git pull origin master


Porém, toda vez que atualizarmos tanto o nosso projeto local quanto o projeto remoto, precisaremos indicar qual o repositório e o nome da branch que a nossa branch local se refere no remoto, isto é, precisaremos digitar git pull origin design e git push origin design para atualizar os repositórios locais e remotos, respectivamente.
Para evitar tal trabalho, podemos indicar o caminho (track) da branch remota para a nossa branch local. Isso pode ser feito no instante em que criamos a branch remota através da opção "-u". No nosso caso, temos:
	git push -u origin design

E como podemos visualizar as branches já existentes em um repositório remoto? Isso é feito através da opção "-r" passado ao comando git branch.
	git branch -r

Uma vez visto as branches remotas, como copiar uma delas para a máquina local? Isso é feito passando o nome do repositório e da branch remota ao comando git branch, além de indicar o nome da branch que será criada. Mais uma vez, temos o problema de indicar o caminho entre as branches. Para este caso, a opção -t resolve.
	git branch -t design origin/design